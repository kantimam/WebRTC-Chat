{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Schwartza\\\\Desktop\\\\prog2020\\\\reactChat\\\\chat\\\\src\\\\components\\\\Socket.tsx\";\nimport React, { Component } from 'react';\n\nfunction initSocket() {\n  const socket = new WebSocket(\"ws://127.0.0.1:5000\");\n\n  socket.onopen = function (e) {\n    console.log(\"[open] Connection established\");\n    console.log(\"Sending to server\");\n    socket.send(\"My name is John\");\n  };\n\n  socket.onmessage = function (event) {\n    console.log(`[message] Data received from server: ${event.data}`);\n  };\n\n  socket.onclose = function (event) {\n    if (event.wasClean) {\n      console.log(`[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\n    } else {\n      // e.g. server process killed or network down\n      // event.code is usually 1006 in this case\n      console.log('[close] Connection died');\n    }\n  };\n\n  socket.onerror = function (error) {\n    console.log(`[error] ${error.message}`);\n  };\n\n  return socket;\n}\n\nexport default class Socket extends Component {\n  constructor(...args) {\n    super(...args);\n    this.socket = initSocket();\n    this.state = {};\n\n    this.sendRandomMessage = () => {\n      if (!this.socket) return;\n      console.log(\"was called\");\n      this.socket.send(\"hey thats a test\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sendRandomMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"send message\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Schwartza/Desktop/prog2020/reactChat/chat/src/components/Socket.tsx"],"names":["React","Component","initSocket","socket","WebSocket","onopen","e","console","log","send","onmessage","event","data","onclose","wasClean","code","reason","onerror","error","message","Socket","state","sendRandomMessage","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AASA,SAASC,UAAT,GAAsB;AAClB,QAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAf;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAL,IAAAA,MAAM,CAACM,IAAP,CAAY,iBAAZ;AACH,GAJD;;AAMAN,EAAAA,MAAM,CAACO,SAAP,GAAmB,UAAUC,KAAV,EAAiB;AAChCJ,IAAAA,OAAO,CAACC,GAAR,CAAa,wCAAuCG,KAAK,CAACC,IAAK,EAA/D;AACH,GAFD;;AAIAT,EAAAA,MAAM,CAACU,OAAP,GAAiB,UAAUF,KAAV,EAAiB;AAC9B,QAAIA,KAAK,CAACG,QAAV,EAAoB;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAa,2CAA0CG,KAAK,CAACI,IAAK,WAAUJ,KAAK,CAACK,MAAO,EAAzF;AACH,KAFD,MAEO;AACH;AACA;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;AACJ,GARD;;AAUAL,EAAAA,MAAM,CAACc,OAAP,GAAiB,UAAUC,KAAV,EAAsB;AACnCX,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUU,KAAK,CAACC,OAAQ,EAArC;AACH,GAFD;;AAIA,SAAOhB,MAAP;AACH;;AAED,eAAe,MAAMiB,MAAN,SAAqBnB,SAArB,CAA6C;AAAA;AAAA;AAAA,SACxDE,MADwD,GAC/CD,UAAU,EADqC;AAAA,SAExDmB,KAFwD,GAEhD,EAFgD;;AAAA,SAIxDC,iBAJwD,GAIpC,MAAM;AACtB,UAAI,CAAC,KAAKnB,MAAV,EAAkB;AAClBI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,WAAKL,MAAL,CAAYM,IAAZ,CAAiB,kBAAjB;AACH,KARuD;AAAA;;AAWxDc,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,KAAKD,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ;AAKH;;AAjBuD","sourcesContent":["import React, { Component } from 'react'\r\n\r\ninterface Props {\r\n\r\n}\r\ninterface State {\r\n\r\n}\r\n\r\nfunction initSocket() {\r\n    const socket = new WebSocket(\"ws://127.0.0.1:5000\");\r\n\r\n    socket.onopen = function (e) {\r\n        console.log(\"[open] Connection established\");\r\n        console.log(\"Sending to server\");\r\n        socket.send(\"My name is John\");\r\n    };\r\n\r\n    socket.onmessage = function (event) {\r\n        console.log(`[message] Data received from server: ${event.data}`);\r\n    };\r\n\r\n    socket.onclose = function (event) {\r\n        if (event.wasClean) {\r\n            console.log(`[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\r\n        } else {\r\n            // e.g. server process killed or network down\r\n            // event.code is usually 1006 in this case\r\n            console.log('[close] Connection died');\r\n        }\r\n    };\r\n\r\n    socket.onerror = function (error: any) {\r\n        console.log(`[error] ${error.message}`);\r\n    };\r\n\r\n    return socket;\r\n}\r\n\r\nexport default class Socket extends Component<Props, State> {\r\n    socket = initSocket();\r\n    state = {}\r\n\r\n    sendRandomMessage = () => {\r\n        if (!this.socket) return\r\n        console.log(\"was called\");\r\n        this.socket.send(\"hey thats a test\");\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.sendRandomMessage}>send message</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}