{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Schwartza\\\\Desktop\\\\prog2020\\\\reactChat\\\\chat\\\\src\\\\components\\\\Socket.tsx\";\nimport React, { Component } from 'react';\nexport default class Socket extends Component {\n  constructor(...args) {\n    super(...args);\n    this.socket = new WebSocket('wss://localhost:8080');\n    this.state = {};\n\n    this.initSocket = () => {\n      const socket = new WebSocket(\"wss://javascript.info/article/websocket/demo/hello\");\n\n      socket.onopen = function (e) {\n        alert(\"[open] Connection established\");\n        alert(\"Sending to server\");\n        socket.send(\"My name is John\");\n      };\n\n      socket.onmessage = function (event) {\n        alert(`[message] Data received from server: ${event.data}`);\n      };\n\n      socket.onclose = function (event) {\n        if (event.wasClean) {\n          alert(`[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\n        } else {\n          // e.g. server process killed or network down\n          // event.code is usually 1006 in this case\n          alert('[close] Connection died');\n        }\n      };\n\n      socket.onerror = function (error) {\n        alert(`[error] ${error.message}`);\n      };\n\n      return socket;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Schwartza/Desktop/prog2020/reactChat/chat/src/components/Socket.tsx"],"names":["React","Component","Socket","socket","WebSocket","state","initSocket","onopen","e","alert","send","onmessage","event","data","onclose","wasClean","code","reason","onerror","error","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AASA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA6C;AAAA;AAAA;AAAA,SACxDE,MADwD,GAC/C,IAAIC,SAAJ,CAAc,sBAAd,CAD+C;AAAA,SAExDC,KAFwD,GAEhD,EAFgD;;AAAA,SAIxDC,UAJwD,GAI3C,MAAM;AACf,YAAMH,MAAM,GAAG,IAAIC,SAAJ,CAAc,oDAAd,CAAf;;AAEAD,MAAAA,MAAM,CAACI,MAAP,GAAgB,UAAUC,CAAV,EAAa;AACzBC,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACAA,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACAN,QAAAA,MAAM,CAACO,IAAP,CAAY,iBAAZ;AACH,OAJD;;AAMAP,MAAAA,MAAM,CAACQ,SAAP,GAAmB,UAAUC,KAAV,EAAiB;AAChCH,QAAAA,KAAK,CAAE,wCAAuCG,KAAK,CAACC,IAAK,EAApD,CAAL;AACH,OAFD;;AAIAV,MAAAA,MAAM,CAACW,OAAP,GAAiB,UAAUF,KAAV,EAAiB;AAC9B,YAAIA,KAAK,CAACG,QAAV,EAAoB;AAChBN,UAAAA,KAAK,CAAE,2CAA0CG,KAAK,CAACI,IAAK,WAAUJ,KAAK,CAACK,MAAO,EAA9E,CAAL;AACH,SAFD,MAEO;AACH;AACA;AACAR,UAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AACJ,OARD;;AAUAN,MAAAA,MAAM,CAACe,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAC9BV,QAAAA,KAAK,CAAE,WAAUU,KAAK,CAACC,OAAQ,EAA1B,CAAL;AACH,OAFD;;AAIA,aAAOjB,MAAP;AACH,KAhCuD;AAAA;;AAkCxDkB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAxCuD","sourcesContent":["import React, { Component } from 'react'\r\n\r\ninterface Props {\r\n\r\n}\r\ninterface State {\r\n\r\n}\r\n\r\nexport default class Socket extends Component<Props, State> {\r\n    socket = new WebSocket('wss://localhost:8080');\r\n    state = {}\r\n\r\n    initSocket = () => {\r\n        const socket = new WebSocket(\"wss://javascript.info/article/websocket/demo/hello\");\r\n\r\n        socket.onopen = function (e) {\r\n            alert(\"[open] Connection established\");\r\n            alert(\"Sending to server\");\r\n            socket.send(\"My name is John\");\r\n        };\r\n\r\n        socket.onmessage = function (event) {\r\n            alert(`[message] Data received from server: ${event.data}`);\r\n        };\r\n\r\n        socket.onclose = function (event) {\r\n            if (event.wasClean) {\r\n                alert(`[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\r\n            } else {\r\n                // e.g. server process killed or network down\r\n                // event.code is usually 1006 in this case\r\n                alert('[close] Connection died');\r\n            }\r\n        };\r\n\r\n        socket.onerror = function (error) {\r\n            alert(`[error] ${error.message}`);\r\n        };\r\n\r\n        return socket;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}